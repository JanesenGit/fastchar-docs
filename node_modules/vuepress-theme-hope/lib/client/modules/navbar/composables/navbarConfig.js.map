{"version":3,"file":"navbarConfig.js","sourceRoot":"","sources":["../../../../../src/client/modules/navbar/composables/navbarConfig.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAEnE,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAEnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AACnE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAUzE,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,IAAuC,EACvC,MAAM,GAAG,EAAE,EACc,EAAE;IAC3B,IAAI,QAAQ,CAAC,IAAI,CAAC;QAAE,OAAO,eAAe,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAExE,IAAI,UAAU,IAAI,IAAI;QACpB,OAAO;YACL,GAAG,IAAI;YACP,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzC,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnD,CAAC,CAAC,EAAE,CAAC;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC,KAAK,EAAE,EAAE,CACqC,CAC3C,iBAAiB,CAAC,KAAK,EAAE,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAC7D,CACJ;SACF,CAAC;IAEJ,OAAO;QACL,GAAG,IAAI;QACP,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,IAAI,CAAC,IAAI;YACX,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;KAC3D,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAE5B,EAAE;IACF,MAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAE7C,MAAM,cAAc,GAAG,GAA8B,EAAE,CACrD,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAE9E,MAAM,WAAW,GAAG,mBAAmB,CACrC,GAAG,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,EAClC,GAAG,EAAE,CAAC,cAAc,EAAE,CACvB,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { isLinkExternal, isString } from \"@vuepress/helper/client\";\nimport type { ComputedRefWithControl } from \"@vueuse/core\";\nimport { computedWithControl } from \"@vueuse/core\";\n\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\nimport { resolveLinkInfo, resolvePrefix } from \"@theme-hope/utils/index\";\n\nimport type {\n  AutoLinkOptions,\n  NavGroup,\n  NavbarGroup,\n  NavbarItem,\n} from \"../../../../shared/index.js\";\nimport type { ResolvedThemeNavbarItem } from \"../utils/index.js\";\n\nexport const resolveNavbarItem = (\n  item: NavbarItem | NavbarGroup | string,\n  prefix = \"\",\n): ResolvedThemeNavbarItem => {\n  if (isString(item)) return resolveLinkInfo(resolvePrefix(prefix, item));\n\n  if (\"children\" in item)\n    return {\n      ...item,\n      ...(item.link && !isLinkExternal(item.link)\n        ? resolveLinkInfo(resolvePrefix(prefix, item.link))\n        : {}),\n      children: item.children.map(\n        (child) =>\n          <NavGroup<AutoLinkOptions> | AutoLinkOptions>(\n            resolveNavbarItem(child, resolvePrefix(prefix, item.prefix))\n          ),\n      ),\n    };\n\n  return {\n    ...item,\n    link: isLinkExternal(item.link)\n      ? item.link\n      : resolveLinkInfo(resolvePrefix(prefix, item.link)).link,\n  };\n};\n\nexport const useNavbarItems = (): ComputedRefWithControl<\n  ResolvedThemeNavbarItem[]\n> => {\n  const themeLocaleData = useThemeLocaleData();\n\n  const getNavbarItems = (): ResolvedThemeNavbarItem[] =>\n    (themeLocaleData.value.navbar || []).map((item) => resolveNavbarItem(item));\n\n  const navbarItems = computedWithControl(\n    () => themeLocaleData.value.navbar,\n    () => getNavbarItems(),\n  );\n\n  return navbarItems;\n};\n"]}