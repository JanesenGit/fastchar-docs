"use strict";const N=/^>(?:(?: {0,3})| {0,2}\t {0,1})\[!(.*)\]\s*$/i,U=(i,{alertNames:R=["tip","warning","caution","important","note"],deep:v=!1,openRender:M,closeRender:I,titleRender:y}={})=>{const T=(t,r,o,$)=>{if(t.sCount[r]-t.blkIndent>=4||t.level!==0&&!v)return!1;const S=t.bMarks[r]+t.tShift[r],q=t.eMarks[r];if(t.src.charAt(S)!==">")return!1;const k=N.exec(t.src.slice(S,q));if(!k||!R.includes(k[1].toLowerCase()))return!1;if($)return!0;const b=k[1].toLowerCase(),p=[],h=[],n=[],u=[],J=t.lineMax,L=t.parentType,g=t.md.block.ruler.getRules("alert");t.parentType="alert";let e;for(e=r+1;e<o;e++){let s=!1,_=!1,a=t.bMarks[e]+t.tShift[e];const m=t.eMarks[e],E=t.sCount[e]<t.blkIndent;if(a>=m)break;if(t.src.charAt(a++)===">"&&!E){let l,c=t.sCount[e]+1;t.src.charAt(a)===" "?(a++,c++,s=!1,l=!0):t.src.charAt(a)==="	"?(l=!0,(t.bsCount[e]+c)%4===3?(a++,c++,s=!1):s=!0):l=!1;let d=c;for(p.push(t.bMarks[e]),t.bMarks[e]=a;a<m;){const A=t.src.charAt(a);if(A==="	")d+=4-(d+t.bsCount[e]+(s?1:0))%4;else if(A===" ")d++;else break;a++}_=a>=m,h.push(t.bsCount[e]),t.bsCount[e]=t.sCount[e]+1+(l?1:0),n.push(t.sCount[e]),t.sCount[e]=d-c,u.push(t.tShift[e]),t.tShift[e]=a-t.bMarks[e];continue}if(_)break;let x=!1;for(let l=0;l<g.length;l++)if(g[l](t,e,o,!0)){x=!0;break}if(x){t.lineMax=e,t.blkIndent!==0&&(p.push(t.bMarks[e]),h.push(t.bsCount[e]),u.push(t.tShift[e]),n.push(t.sCount[e]),t.sCount[e]-=t.blkIndent);break}p.push(t.bMarks[e]),h.push(t.bsCount[e]),u.push(t.tShift[e]),n.push(t.sCount[e]),t.sCount[e]=-1}const j=t.blkIndent;t.blkIndent=0;const z=[r,r+1],w=[r+1,0],C=t.push("alert_open","div",1);C.markup=b,C.attrJoin("class",`markdown-alert markdown-alert-${b}`),C.map=w;const f=t.push("alert_title","",0);f.attrJoin("class","markdown-alert-title"),f.markup=b,f.content=k[1],f.map=z,t.md.block.tokenize(t,r+1,e);const B=t.push("alert_close","div",-1);B.markup=b,t.lineMax=J,t.parentType=L,w[1]=t.line;for(let s=0;s<u.length;s++)t.bMarks[s+r]=p[s],t.tShift[s+r]=u[s],t.sCount[s+r]=n[s],t.bsCount[s+r]=h[s];return t.blkIndent=j,!0};i.block.ruler.before("blockquote","alert",T,{alt:["paragraph","reference","blockquote","list"]}),M&&(i.renderer.rules.alert_open=M),I&&(i.renderer.rules.alert_close=I),i.renderer.rules.alert_title=y||((t,r)=>{const o=t[r];return`<p class="markdown-alert-title">${o.content[0].toUpperCase()+o.content.substring(1).toLowerCase()}</p>
`})};exports.alert=U;
//# sourceMappingURL=index.cjs.map
