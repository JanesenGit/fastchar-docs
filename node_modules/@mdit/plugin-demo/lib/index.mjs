const v=(l,{name:o="demo",openRender:_=(d,e)=>`<details><summary>${d[e].info.trim()}</summary>
`,closeRender:y=()=>`</details>
`,codeRender:a,beforeContent:u=!1}={})=>{const d=(e,s,C,x)=>{let t=e.bMarks[s]+e.tShift[s],c=e.eMarks[s];if(e.src[t]!==":")return!1;let r=t+1;for(;r<=c&&e.src[r]===":";)r+=1;const k=r-t;if(k<3)return!1;const g=e.src.slice(t,r),b=e.src.slice(r,c);if(b.trim().split(" ",2)[0]!==o)return!1;if(x)return!0;let n=s,h=!1;for(;n<C&&(n+=1,t=e.bMarks[n]+e.tShift[n],c=e.eMarks[n],!(t<c&&e.sCount[n]<e.blkIndent));)if(e.src[t]===":"&&e.sCount[n]-e.blkIndent<4){for(r=t+1;r<=c&&e.src[r]===":";r++);if(Math.floor(r-t)>=k&&(r=e.skipSpaces(r),r>=c)){h=!0;break}}const I=e.parentType,R=e.lineMax;e.parentType="container",e.lineMax=n;const p=b.trim().slice(o.length).trim(),i=e.push("demo_open","div",1);i.markup=g,i.block=!0,i.info=p,i.map=[s,n];const M=()=>{const m=e.push(a?"demo_code":"fence","code",0),S=e.sCount[s];m.content=e.src.split(/\n\r?/).slice(s+1,n).map(T=>T.substring(S)).join(`
`).replace(/^\n+/,"").replace(/\n*$/,`
`),m.map=[s,e.line],(m.meta??={}).title=p,a||(m.info="md")};u&&M(),e.md.block.tokenize(e,s+1,n),u||M();const f=e.push("demo_close","div",-1);return f.markup=e.src.slice(t,r),f.block=!0,f.info=p,e.parentType=I,e.lineMax=R,e.line=n+(h?1:0),!0};l.block.ruler.before("fence","demo",d,{alt:["paragraph","reference","blockquote","list"]}),l.renderer.rules.demo_open=_,l.renderer.rules.demo_close=y,a&&(l.renderer.rules.demo_code=a)};export{v as demo};
//# sourceMappingURL=index.mjs.map
